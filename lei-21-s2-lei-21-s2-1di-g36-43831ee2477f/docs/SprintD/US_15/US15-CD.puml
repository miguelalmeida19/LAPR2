@startuml
' ======= layout =========
skinparam backgroundColor #fcf9ea
skinparam titleBorderRoundCorner 15
skinparam titleFontSize 30
skinparam classAttributeIconSize 0
skinparam titleFontName Arial Black
skinparam titleFontColor #f8a978
skinparam roundcorner 20
skinparam stereotypeCBackgroundColor ffc5a1
skinparam class {

ArrowColor ffc5a1
BorderColor White
BackgroundColor badfdb
}


' ======= title =========
center header


<font color=Black size=15><b>Built by WeByte Â©</font>
endheader
title <b>US15 - Class Diagram\n

' ======= classes =========

class ValidateTestUI{
    +showTestAvailable()
    +selectTest()
    +validation(testDTO)
    +menuValidate()
}
class Company{
 - designation
 + createParameterCategory(code, description, nhsId)
 + validateParameterCategory(pc)
 + saveParameterCategory(pc)
 - addParameterCategory(pc)
}

class TestDTO{
    - testTypeDTO;
    - parameterDTOS;
    - nhsCode;
    - testCode;
    - testCreationDate;
    - laboratory;
    - reportMadeDate;
    - samplesAnalysedDate;
    - report;
    + getReport()
    + getNhsCode()
    + getTestCode()
    + getParameterDTO()
    + getTestTypeDTO()
    + getTestCreationDate()
    + getReportMadeDate()
    + getSamplesAnalysedDate()
    + getTestParameterFor()
    + getLaboratory()
    + toString()
}

class TestMapper{
+toDTO(testList)
+toDTO(test)
}


class Test{
    - counter
    - TINOfClient;
    - testParameterList
    - testType
    - nhsCode
    - testCode
    - report
    - laboratory
    - sampleList
    - reportMadeDate
    - samplesAnalysedDate
    - creationDate
    - status
    + isDiagnosisMade()
    + getSampleList()
    + getTestCode()
    + getTestType()
    + getParameterList()
    + getNhsCode()
}

class TestStore{
+createTest(testType, parameterList, nhsCode, laboratory, TINOfClient)
+validateTest(test)
+checkIfClientHasAlreadyTestInSystem(TIN)
+saveTest(test)
+getListRegisteredTest()
+addTest(test)
+getTestList()
+getTestByBarcode(barcode)
}

class ValidateTestController{
 + createParameterCategory(code, description, nhsId)
 + saveParameterCategory(pc)
}


ValidateTestUI ..-> ValidateTestController
ValidateTestUI ..-> TestDTO

ValidateTestController ..-> Test
ValidateTestController ..-> TestStore
ValidateTestController "1" -> "1" TestMapper: uses
ValidateTestController ..-> TestDTO
ValidateTestController ..-> Company

Company "1" ..-> "1" TestStore : uses

TestStore "1" -> "*" Test : knows

Test ..-> TestDTO

TestMapper "1" -> "*" TestDTO : creates

@enduml