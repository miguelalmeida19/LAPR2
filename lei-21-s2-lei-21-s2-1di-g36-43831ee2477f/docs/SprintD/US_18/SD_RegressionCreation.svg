<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1863.75px" preserveAspectRatio="none" style="width:2482px;height:1863px;" version="1.1" viewBox="0 0 2482 1863" width="2482.5px" zoomAndPan="magnify"><defs><filter height="300%" id="f1b6isjbw8f5rj" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.5"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="5.0" dy="5.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="1732.7441" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="143.75" y="64.5117"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="35" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="150" y="102.4512"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="35" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="150" y="194.1406"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="786.25" y="275.8301"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="786.25" y="351.2695"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="786.25" y="728.0957"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="786.25" y="803.5352"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="786.25" y="956.9141"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="786.25" y="1032.3535"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="786.25" y="1107.793"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="786.25" y="1229.9219"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="786.25" y="1371.2402"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="786.25" y="1536.3086"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="1721.875" y="878.9746"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="2101.25" y="620.9668"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="1217.168" style="stroke:#000000;stroke-width:2.5;" width="2180.625" x="12.5" y="570.0879"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="516.0156" style="stroke:#000000;stroke-width:2.5;" width="1816.875" x="37.5" y="677.2168"/><rect fill="#FFFFFF" height="266.7578" style="stroke:none;stroke-width:1.25;" width="1816.875" x="37.5" y="926.4746"/><rect fill="#FFFFFF" height="509.834" style="stroke:none;stroke-width:1.25;" width="2180.625" x="12.5" y="1277.4219"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="451.8945" style="stroke:#000000;stroke-width:2.5;" width="2009.375" x="25" y="1288.6719"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="138.8184" style="stroke:#000000;stroke-width:2.5;" width="855.625" x="37.5" y="1320.3613"/><rect fill="#FFFFFF" height="40.4395" style="stroke:none;stroke-width:1.25;" width="855.625" x="37.5" y="1418.7402"/><rect fill="#FFFFFF" height="234.6973" style="stroke:none;stroke-width:1.25;" width="2009.375" x="25" y="1505.8691"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="101.3184" style="stroke:#000000;stroke-width:2.5;" width="855.625" x="37.5" y="1592.5586"/><rect fill="#FFFFFF" height="40.4395" style="stroke:none;stroke-width:1.25;" width="855.625" x="37.5" y="1653.4375"/><line style="stroke:#A80036;stroke-width:1.25;stroke-dasharray:5.0,5.0;" x1="150" x2="150" y1="52.0117" y2="1808.5059"/><line style="stroke:#A80036;stroke-width:1.25;stroke-dasharray:5.0,5.0;" x1="550" x2="550" y1="52.0117" y2="1808.5059"/><line style="stroke:#A80036;stroke-width:1.25;stroke-dasharray:5.0,5.0;" x1="791.875" x2="791.875" y1="52.0117" y2="1808.5059"/><line style="stroke:#A80036;stroke-width:1.25;stroke-dasharray:5.0,5.0;" x1="944.375" x2="944.375" y1="52.0117" y2="1808.5059"/><line style="stroke:#A80036;stroke-width:1.25;stroke-dasharray:5.0,5.0;" x1="1108.125" x2="1108.125" y1="52.0117" y2="1808.5059"/><line style="stroke:#A80036;stroke-width:1.25;stroke-dasharray:5.0,5.0;" x1="1411.875" x2="1411.875" y1="52.0117" y2="1808.5059"/><line style="stroke:#A80036;stroke-width:1.25;stroke-dasharray:5.0,5.0;" x1="1728.125" x2="1728.125" y1="52.0117" y2="1808.5059"/><line style="stroke:#A80036;stroke-width:1.25;stroke-dasharray:5.0,5.0;" x1="1938.125" x2="1938.125" y1="52.0117" y2="1808.5059"/><line style="stroke:#A80036;stroke-width:1.25;stroke-dasharray:5.0,5.0;" x1="2106.875" x2="2106.875" y1="52.0117" y2="1808.5059"/><line style="stroke:#A80036;stroke-width:1.25;stroke-dasharray:5.0,5.0;" x1="2331.875" x2="2331.875" y1="52.0117" y2="1808.5059"/><rect fill="#FEFECE" filter="url(#f1b6isjbw8f5rj)" height="39.5117" style="stroke:#A80036;stroke-width:1.875;" width="195" x="50" y="6.25"/><text fill="#000000" font-family="sans-serif" font-size="17.5" lengthAdjust="spacing" textLength="177.5" x="58.75" y="33.1665">:SendReportController</text><rect fill="#FEFECE" filter="url(#f1b6isjbw8f5rj)" height="39.5117" style="stroke:#A80036;stroke-width:1.875;" width="195" x="50" y="1807.2559"/><text fill="#000000" font-family="sans-serif" font-size="17.5" lengthAdjust="spacing" textLength="177.5" x="58.75" y="1834.1724">:SendReportController</text><rect fill="#FEFECE" filter="url(#f1b6isjbw8f5rj)" height="39.5117" style="stroke:#A80036;stroke-width:1.875;" width="257.5" x="418.75" y="6.25"/><text fill="#000000" font-family="sans-serif" font-size="17.5" lengthAdjust="spacing" textLength="240" x="427.5" y="33.1665">testsMadeInInterval:List&lt;Test&gt;</text><rect fill="#FEFECE" filter="url(#f1b6isjbw8f5rj)" height="39.5117" style="stroke:#A80036;stroke-width:1.875;" width="257.5" x="418.75" y="1807.2559"/><text fill="#000000" font-family="sans-serif" font-size="17.5" lengthAdjust="spacing" textLength="240" x="427.5" y="1834.1724">testsMadeInInterval:List&lt;Test&gt;</text><rect fill="#FEFECE" filter="url(#f1b6isjbw8f5rj)" height="39.5117" style="stroke:#A80036;stroke-width:1.875;" width="171.25" x="704.375" y="6.25"/><text fill="#000000" font-family="sans-serif" font-size="17.5" lengthAdjust="spacing" textLength="153.75" x="713.125" y="33.1665">testStore:TestStore</text><rect fill="#FEFECE" filter="url(#f1b6isjbw8f5rj)" height="39.5117" style="stroke:#A80036;stroke-width:1.875;" width="171.25" x="704.375" y="1807.2559"/><text fill="#000000" font-family="sans-serif" font-size="17.5" lengthAdjust="spacing" textLength="153.75" x="713.125" y="1834.1724">testStore:TestStore</text><rect fill="#FEFECE" filter="url(#f1b6isjbw8f5rj)" height="39.5117" style="stroke:#A80036;stroke-width:1.875;" width="97.5" x="893.125" y="6.25"/><text fill="#000000" font-family="sans-serif" font-size="17.5" lengthAdjust="spacing" textLength="80" x="901.875" y="33.1665">:Company</text><rect fill="#FEFECE" filter="url(#f1b6isjbw8f5rj)" height="39.5117" style="stroke:#A80036;stroke-width:1.875;" width="97.5" x="893.125" y="1807.2559"/><text fill="#000000" font-family="sans-serif" font-size="17.5" lengthAdjust="spacing" textLength="80" x="901.875" y="1834.1724">:Company</text><rect fill="#FEFECE" filter="url(#f1b6isjbw8f5rj)" height="39.5117" style="stroke:#A80036;stroke-width:1.875;" width="196.25" x="1008.125" y="6.25"/><text fill="#000000" font-family="sans-serif" font-size="17.5" lengthAdjust="spacing" textLength="178.75" x="1016.875" y="33.1665">regression:Regression</text><rect fill="#FEFECE" filter="url(#f1b6isjbw8f5rj)" height="39.5117" style="stroke:#A80036;stroke-width:1.875;" width="196.25" x="1008.125" y="1807.2559"/><text fill="#000000" font-family="sans-serif" font-size="17.5" lengthAdjust="spacing" textLength="178.75" x="1016.875" y="1834.1724">regression:Regression</text><rect fill="#FEFECE" filter="url(#f1b6isjbw8f5rj)" height="39.5117" style="stroke:#A80036;stroke-width:1.875;" width="375" x="1221.875" y="6.25"/><text fill="#000000" font-family="sans-serif" font-size="17.5" lengthAdjust="spacing" textLength="357.5" x="1230.625" y="33.1665">nhsReportValuesDTO:NHSReportValuesDTO</text><rect fill="#FEFECE" filter="url(#f1b6isjbw8f5rj)" height="39.5117" style="stroke:#A80036;stroke-width:1.875;" width="375" x="1221.875" y="1807.2559"/><text fill="#000000" font-family="sans-serif" font-size="17.5" lengthAdjust="spacing" textLength="357.5" x="1230.625" y="1834.1724">nhsReportValuesDTO:NHSReportValuesDTO</text><rect fill="#FEFECE" filter="url(#f1b6isjbw8f5rj)" height="39.5117" style="stroke:#A80036;stroke-width:1.875;" width="222.5" x="1614.375" y="6.25"/><text fill="#000000" font-family="sans-serif" font-size="17.5" lengthAdjust="spacing" textLength="205" x="1623.125" y="33.1665">:MultipleLinearRegression</text><rect fill="#FEFECE" filter="url(#f1b6isjbw8f5rj)" height="39.5117" style="stroke:#A80036;stroke-width:1.875;" width="222.5" x="1614.375" y="1807.2559"/><text fill="#000000" font-family="sans-serif" font-size="17.5" lengthAdjust="spacing" textLength="205" x="1623.125" y="1834.1724">:MultipleLinearRegression</text><rect fill="#FEFECE" filter="url(#f1b6isjbw8f5rj)" height="39.5117" style="stroke:#A80036;stroke-width:1.875;" width="162.5" x="1854.375" y="6.25"/><text fill="#000000" font-family="sans-serif" font-size="17.5" lengthAdjust="spacing" textLength="145" x="1863.125" y="33.1665">:LinearRegression</text><rect fill="#FEFECE" filter="url(#f1b6isjbw8f5rj)" height="39.5117" style="stroke:#A80036;stroke-width:1.875;" width="162.5" x="1854.375" y="1807.2559"/><text fill="#000000" font-family="sans-serif" font-size="17.5" lengthAdjust="spacing" textLength="145" x="1863.125" y="1834.1724">:LinearRegression</text><rect fill="#FEFECE" filter="url(#f1b6isjbw8f5rj)" height="39.5117" style="stroke:#A80036;stroke-width:1.875;" width="141.25" x="2034.375" y="6.25"/><text fill="#000000" font-family="sans-serif" font-size="17.5" lengthAdjust="spacing" textLength="123.75" x="2043.125" y="33.1665">x:List&lt;double[]&gt;</text><rect fill="#FEFECE" filter="url(#f1b6isjbw8f5rj)" height="39.5117" style="stroke:#A80036;stroke-width:1.875;" width="141.25" x="2034.375" y="1807.2559"/><text fill="#000000" font-family="sans-serif" font-size="17.5" lengthAdjust="spacing" textLength="123.75" x="2043.125" y="1834.1724">x:List&lt;double[]&gt;</text><rect fill="#FEFECE" filter="url(#f1b6isjbw8f5rj)" height="39.5117" style="stroke:#A80036;stroke-width:1.875;" width="272.5" x="2193.125" y="6.25"/><text fill="#000000" font-family="sans-serif" font-size="17.5" lengthAdjust="spacing" textLength="255" x="2201.875" y="33.1665">nhsReportDTO: NHSReportDTO</text><rect fill="#FEFECE" filter="url(#f1b6isjbw8f5rj)" height="39.5117" style="stroke:#A80036;stroke-width:1.875;" width="272.5" x="2193.125" y="1807.2559"/><text fill="#000000" font-family="sans-serif" font-size="17.5" lengthAdjust="spacing" textLength="255" x="2201.875" y="1834.1724">nhsReportDTO: NHSReportDTO</text><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="1732.7441" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="143.75" y="64.5117"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="35" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="150" y="102.4512"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="35" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="150" y="194.1406"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="786.25" y="275.8301"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="786.25" y="351.2695"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="786.25" y="728.0957"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="786.25" y="803.5352"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="786.25" y="956.9141"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="786.25" y="1032.3535"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="786.25" y="1107.793"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="786.25" y="1229.9219"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="786.25" y="1371.2402"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="786.25" y="1536.3086"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="1721.875" y="878.9746"/><rect fill="#FFFFFF" filter="url(#f1b6isjbw8f5rj)" height="37.5" style="stroke:#A80036;stroke-width:1.25;" width="12.5" x="2101.25" y="620.9668"/><line style="stroke:#A80036;stroke-width:1.25;" x1="162.5" x2="215" y1="92.4512" y2="92.4512"/><line style="stroke:#A80036;stroke-width:1.25;" x1="215" x2="215" y1="92.4512" y2="108.7012"/><line style="stroke:#A80036;stroke-width:1.25;" x1="163.75" x2="215" y1="108.7012" y2="108.7012"/><polygon fill="#A80036" points="176.25,103.7012,163.75,108.7012,176.25,113.7012,171.25,108.7012" style="stroke:#A80036;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="8.75" x="171.25" y="86.3806">1</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="348.75" x="185" y="86.3806">lowerLimit= getIntervalOfDaysToFitTheModel()[0]</text><line style="stroke:#A80036;stroke-width:1.25;" x1="162.5" x2="215" y1="184.1406" y2="184.1406"/><line style="stroke:#A80036;stroke-width:1.25;" x1="215" x2="215" y1="184.1406" y2="200.3906"/><line style="stroke:#A80036;stroke-width:1.25;" x1="163.75" x2="215" y1="200.3906" y2="200.3906"/><polygon fill="#A80036" points="176.25,195.3906,163.75,200.3906,176.25,205.3906,171.25,200.3906" style="stroke:#A80036;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="8.75" x="171.25" y="178.0701">2</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="356.25" x="185" y="178.0701">upperLimit = getIntervalOfDaysToFitTheModel()[1]</text><polygon fill="#A80036" points="771.25,270.8301,783.75,275.8301,771.25,280.8301,776.25,275.8301" style="stroke:#A80036;stroke-width:1.25;"/><line style="stroke:#A80036;stroke-width:1.25;" x1="156.25" x2="778.75" y1="275.8301" y2="275.8301"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="8.75" x="165" y="269.7595">3</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="532.5" x="178.75" y="269.7595">testsMadeInInterval = getCovidTestsForRegression(lowerLimit, upperLimit)</text><polygon fill="#A80036" points="771.25,346.2695,783.75,351.2695,771.25,356.2695,776.25,351.2695" style="stroke:#A80036;stroke-width:1.25;"/><line style="stroke:#A80036;stroke-width:1.25;" x1="156.25" x2="778.75" y1="351.2695" y2="351.2695"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="8.75" x="165" y="345.199">4</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="407.5" x="178.75" y="345.199">Y = getYList(lowerLimit, upperLimit, testsMadeInInterval)</text><line style="stroke:#A80036;stroke-width:1.25;" x1="156.25" x2="208.75" y1="426.709" y2="426.709"/><line style="stroke:#A80036;stroke-width:1.25;" x1="208.75" x2="208.75" y1="426.709" y2="442.959"/><line style="stroke:#A80036;stroke-width:1.25;" x1="157.5" x2="208.75" y1="442.959" y2="442.959"/><polygon fill="#A80036" points="170,437.959,157.5,442.959,170,447.959,165,442.959" style="stroke:#A80036;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="8.75" x="165" y="420.6384">5</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="156.25" x="178.75" y="420.6384">nhsReportValuesDTO</text><line style="stroke:#A80036;stroke-width:1.25;" x1="156.25" x2="208.75" y1="480.8984" y2="480.8984"/><line style="stroke:#A80036;stroke-width:1.25;" x1="208.75" x2="208.75" y1="480.8984" y2="497.1484"/><line style="stroke:#A80036;stroke-width:1.25;" x1="157.5" x2="208.75" y1="497.1484" y2="497.1484"/><polygon fill="#A80036" points="170,492.1484,157.5,497.1484,170,502.1484,165,497.1484" style="stroke:#A80036;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="8.75" x="165" y="474.8279">6</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="77.5" x="178.75" y="474.8279">tableString</text><line style="stroke:#A80036;stroke-width:1.25;" x1="156.25" x2="208.75" y1="535.0879" y2="535.0879"/><line style="stroke:#A80036;stroke-width:1.25;" x1="208.75" x2="208.75" y1="535.0879" y2="551.3379"/><line style="stroke:#A80036;stroke-width:1.25;" x1="157.5" x2="208.75" y1="551.3379" y2="551.3379"/><polygon fill="#A80036" points="170,546.3379,157.5,551.3379,170,556.3379,165,551.3379" style="stroke:#A80036;stroke-width:1.25;"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="8.75" x="165" y="529.0173">7</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="75" x="178.75" y="529.0173">regression</text><path d="M12.5,570.0879 L88.75,570.0879 L88.75,580.0879 L76.25,592.5879 L12.5,592.5879 L12.5,570.0879 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.25;"/><rect fill="none" height="1217.168" style="stroke:#000000;stroke-width:2.5;" width="2180.625" x="12.5" y="570.0879"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="20" x="31.25" y="588.2068">alt</text><text fill="#000000" font-family="sans-serif" font-size="13.75" font-weight="bold" lengthAdjust="spacing" textLength="268.75" x="107.5" y="586.8616">[getModelToUse() equals to "multiple"]</text><polygon fill="#A80036" points="2086.25,615.9668,2098.75,620.9668,2086.25,625.9668,2091.25,620.9668" style="stroke:#A80036;stroke-width:1.25;"/><line style="stroke:#A80036;stroke-width:1.25;" x1="156.25" x2="2093.75" y1="620.9668" y2="620.9668"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="8.75" x="165" y="614.8962">8</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="55" x="178.75" y="614.8962">create()</text><path d="M37.5,677.2168 L113.75,677.2168 L113.75,687.2168 L101.25,699.7168 L37.5,699.7168 L37.5,677.2168 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.25;"/><rect fill="none" height="516.0156" style="stroke:#000000;stroke-width:2.5;" width="1816.875" x="37.5" y="677.2168"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="20" x="56.25" y="695.3357">alt</text><text fill="#000000" font-family="sans-serif" font-size="13.75" font-weight="bold" lengthAdjust="spacing" textLength="227.5" x="132.5" y="693.9905">[getDaysOrWeeks equals "days"]</text><polygon fill="#A80036" points="771.25,723.0957,783.75,728.0957,771.25,733.0957,776.25,728.0957" style="stroke:#A80036;stroke-width:1.25;"/><line style="stroke:#A80036;stroke-width:1.25;" x1="156.25" x2="778.75" y1="728.0957" y2="728.0957"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="8.75" x="165" y="722.0251">9</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="552.5" x="178.75" y="722.0251">x1 = getXListNumberTestPerDay(lowerLimit, upperLimit, testsMadeInInterval)</text><polygon fill="#A80036" points="771.25,798.5352,783.75,803.5352,771.25,808.5352,776.25,803.5352" style="stroke:#A80036;stroke-width:1.25;"/><line style="stroke:#A80036;stroke-width:1.25;" x1="156.25" x2="778.75" y1="803.5352" y2="803.5352"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="17.5" x="165" y="797.4646">10</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="300" x="187.5" y="797.4646">x2 = getXListAges(lowerLimit, upperLimit)</text><polygon fill="#A80036" points="1706.875,873.9746,1719.375,878.9746,1706.875,883.9746,1711.875,878.9746" style="stroke:#A80036;stroke-width:1.25;"/><line style="stroke:#A80036;stroke-width:1.25;" x1="156.25" x2="1714.375" y1="878.9746" y2="878.9746"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="17.5" x="165" y="872.9041">11</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="180" x="187.5" y="872.9041">regression = create(x, Y)</text><line style="stroke:#000000;stroke-width:1.25;stroke-dasharray:2.0,2.0;" x1="37.5" x2="1854.375" y1="927.7246" y2="927.7246"/><polygon fill="#A80036" points="771.25,951.9141,783.75,956.9141,771.25,961.9141,776.25,956.9141" style="stroke:#A80036;stroke-width:1.25;"/><line style="stroke:#A80036;stroke-width:1.25;" x1="156.25" x2="778.75" y1="956.9141" y2="956.9141"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="17.5" x="165" y="950.8435">12</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="570" x="187.5" y="950.8435">x1 = getXListNumberTestsByWeek(lowerLimit, upperLimit, testsMadeInInterval)</text><polygon fill="#A80036" points="771.25,1027.3535,783.75,1032.3535,771.25,1037.3535,776.25,1032.3535" style="stroke:#A80036;stroke-width:1.25;"/><line style="stroke:#A80036;stroke-width:1.25;" x1="156.25" x2="778.75" y1="1032.3535" y2="1032.3535"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="17.5" x="165" y="1026.283">13</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="357.5" x="187.5" y="1026.283">x2 =getXListAgesByWeek(lowerLimit, upperLimit)</text><polygon fill="#A80036" points="771.25,1102.793,783.75,1107.793,771.25,1112.793,776.25,1107.793" style="stroke:#A80036;stroke-width:1.25;"/><line style="stroke:#A80036;stroke-width:1.25;" x1="156.25" x2="778.75" y1="1107.793" y2="1107.793"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="17.5" x="165" y="1101.7224">14</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="301.25" x="187.5" y="1101.7224">Y = getYListWeek(lowerLimit, upperLimit)</text><polygon fill="#A80036" points="1713.125,1178.2324,1725.625,1183.2324,1713.125,1188.2324,1718.125,1183.2324" style="stroke:#A80036;stroke-width:1.25;"/><line style="stroke:#A80036;stroke-width:1.25;" x1="156.25" x2="1720.625" y1="1183.2324" y2="1183.2324"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="17.5" x="165" y="1177.1619">15</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="175" x="187.5" y="1177.1619">regression = create(x,Y)</text><polygon fill="#A80036" points="771.25,1224.9219,783.75,1229.9219,771.25,1234.9219,776.25,1229.9219" style="stroke:#A80036;stroke-width:1.25;"/><line style="stroke:#A80036;stroke-width:1.25;" x1="156.25" x2="778.75" y1="1229.9219" y2="1229.9219"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="17.5" x="165" y="1223.8513">16</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="583.75" x="187.5" y="1223.8513">tableString = getTableWithHistoricalDataToSednNHS(regression, nhsReportDTO)</text><line style="stroke:#000000;stroke-width:1.25;stroke-dasharray:2.0,2.0;" x1="12.5" x2="2193.125" y1="1278.6719" y2="1278.6719"/><path d="M25,1288.6719 L101.25,1288.6719 L101.25,1298.6719 L88.75,1311.1719 L25,1311.1719 L25,1288.6719 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.25;"/><rect fill="none" height="451.8945" style="stroke:#000000;stroke-width:2.5;" width="2009.375" x="25" y="1288.6719"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="20" x="43.75" y="1306.7908">alt</text><text fill="#000000" font-family="sans-serif" font-size="13.75" font-weight="bold" lengthAdjust="spacing" textLength="255" x="120" y="1305.4456">[getDaysOrWeeks() equals to "days"]</text><path d="M37.5,1320.3613 L113.75,1320.3613 L113.75,1330.3613 L101.25,1342.8613 L37.5,1342.8613 L37.5,1320.3613 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.25;"/><rect fill="none" height="138.8184" style="stroke:#000000;stroke-width:2.5;" width="855.625" x="37.5" y="1320.3613"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="20" x="56.25" y="1338.4802">alt</text><text fill="#000000" font-family="sans-serif" font-size="13.75" font-weight="bold" lengthAdjust="spacing" textLength="327.5" x="132.5" y="1337.135">[getIndependentVars()[0] equals to "tests/day"]</text><polygon fill="#A80036" points="771.25,1366.2402,783.75,1371.2402,771.25,1376.2402,776.25,1371.2402" style="stroke:#A80036;stroke-width:1.25;"/><line style="stroke:#A80036;stroke-width:1.25;" x1="156.25" x2="778.75" y1="1371.2402" y2="1371.2402"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="17.5" x="165" y="1365.1697">17</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="543.75" x="187.5" y="1365.1697">x = getXListNumberTestPerDay(lowerLimit, upperLimit, testsMadeInInterval)</text><line style="stroke:#000000;stroke-width:1.25;stroke-dasharray:2.0,2.0;" x1="37.5" x2="893.125" y1="1419.9902" y2="1419.9902"/><polygon fill="#A80036" points="777.5,1444.1797,790,1449.1797,777.5,1454.1797,782.5,1449.1797" style="stroke:#A80036;stroke-width:1.25;"/><line style="stroke:#A80036;stroke-width:1.25;" x1="156.25" x2="785" y1="1449.1797" y2="1449.1797"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="17.5" x="165" y="1443.1091">18</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="291.25" x="187.5" y="1443.1091">x = getXListAges(lowerLimit, upperLimit)</text><polygon fill="#A80036" points="1923.125,1490.8691,1935.625,1495.8691,1923.125,1500.8691,1928.125,1495.8691" style="stroke:#A80036;stroke-width:1.25;"/><line style="stroke:#A80036;stroke-width:1.25;" x1="156.25" x2="1930.625" y1="1495.8691" y2="1495.8691"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="17.5" x="165" y="1489.7986">19</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="80" x="187.5" y="1489.7986">create(x,Y)</text><line style="stroke:#000000;stroke-width:1.25;stroke-dasharray:2.0,2.0;" x1="25" x2="2034.375" y1="1507.1191" y2="1507.1191"/><polygon fill="#A80036" points="771.25,1531.3086,783.75,1536.3086,771.25,1541.3086,776.25,1536.3086" style="stroke:#A80036;stroke-width:1.25;"/><line style="stroke:#A80036;stroke-width:1.25;" x1="156.25" x2="778.75" y1="1536.3086" y2="1536.3086"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="17.5" x="165" y="1530.238">20</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="301.25" x="187.5" y="1530.238">Y = getYListWeek(lowerLimit, upperLimit)</text><path d="M37.5,1592.5586 L113.75,1592.5586 L113.75,1602.5586 L101.25,1615.0586 L37.5,1615.0586 L37.5,1592.5586 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.25;"/><rect fill="none" height="101.3184" style="stroke:#000000;stroke-width:2.5;" width="855.625" x="37.5" y="1592.5586"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="20" x="56.25" y="1610.6775">alt</text><text fill="#000000" font-family="sans-serif" font-size="13.75" font-weight="bold" lengthAdjust="spacing" textLength="327.5" x="132.5" y="1609.3323">[getIndependentVars()[0] equals to "tests/day"]</text><polygon fill="#A80036" points="777.5,1638.4375,790,1643.4375,777.5,1648.4375,782.5,1643.4375" style="stroke:#A80036;stroke-width:1.25;"/><line style="stroke:#A80036;stroke-width:1.25;" x1="156.25" x2="785" y1="1643.4375" y2="1643.4375"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="17.5" x="165" y="1637.3669">21</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="561.25" x="187.5" y="1637.3669">x = getXListNumberTestsByWeek(lowerLimit, upperLimit, testsMadeInInterval)</text><line style="stroke:#000000;stroke-width:1.25;stroke-dasharray:2.0,2.0;" x1="37.5" x2="893.125" y1="1654.6875" y2="1654.6875"/><polygon fill="#A80036" points="777.5,1678.877,790,1683.877,777.5,1688.877,782.5,1683.877" style="stroke:#A80036;stroke-width:1.25;"/><line style="stroke:#A80036;stroke-width:1.25;" x1="156.25" x2="785" y1="1683.877" y2="1683.877"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="17.5" x="165" y="1677.8064">22</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="353.75" x="187.5" y="1677.8064">x = getXListAgesByWeek(lowerLimit, upperLimit)</text><polygon fill="#A80036" points="1923.125,1725.5664,1935.625,1730.5664,1923.125,1735.5664,1928.125,1730.5664" style="stroke:#A80036;stroke-width:1.25;"/><line style="stroke:#A80036;stroke-width:1.25;" x1="156.25" x2="1930.625" y1="1730.5664" y2="1730.5664"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="17.5" x="165" y="1724.4958">23</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="80" x="187.5" y="1724.4958">create(x,Y)</text><polygon fill="#A80036" points="777.5,1772.2559,790,1777.2559,777.5,1782.2559,782.5,1777.2559" style="stroke:#A80036;stroke-width:1.25;"/><line style="stroke:#A80036;stroke-width:1.25;" x1="156.25" x2="785" y1="1777.2559" y2="1777.2559"/><text fill="#000000" font-family="sans-serif" font-size="16.25" font-weight="bold" lengthAdjust="spacing" textLength="17.5" x="165" y="1771.1853">24</text><text fill="#000000" font-family="sans-serif" font-size="16.25" lengthAdjust="spacing" textLength="583.75" x="187.5" y="1771.1853">tableString = getTableWithHistoricalDataToSednNHS(regression, nhsReportDTO)</text><!--MD5=[49026ca50ee282b0fd103441a4cd67fb]
@startuml
'https://plantuml.com/sequence-diagram

autonumber

participant ":SendReportController" as controller
participant "testsMadeInInterval:List<Test>" as testMadeIntervalList
participant "testStore:TestStore" as testStore
participant ":Company" as company
participant "regression:Regression"
participant "nhsReportValuesDTO:NHSReportValuesDTO" as nhsReportValuesDTO
participant ":MultipleLinearRegression" as mlr
participant ":LinearRegression" as lr
participant "x:List<double[]>" as xList
participant "nhsReportDTO: NHSReportDTO"
activate controller
controller -> controller: lowerLimit= getIntervalOfDaysToFitTheModel()[0]
activate controller
deactivate controller
controller -> controller: upperLimit = getIntervalOfDaysToFitTheModel()[1]
activate controller
deactivate controller
controller -> testStore: testsMadeInInterval = getCovidTestsForRegression(lowerLimit, upperLimit)
activate testStore
deactivate testStore
controller -> testStore: Y = getYList(lowerLimit, upperLimit, testsMadeInInterval)
activate testStore
deactivate testStore

controller -> controller: nhsReportValuesDTO
controller -> controller: tableString
controller -> controller: regression
alt getModelToUse() equals to "multiple"
controller -> xList: create()
activate xList
deactivate xList
alt getDaysOrWeeks equals "days"
controller -> testStore: x1 = getXListNumberTestPerDay(lowerLimit, upperLimit, testsMadeInInterval)
activate testStore
deactivate testStore
controller -> testStore: x2 = getXListAges(lowerLimit, upperLimit)
activate testStore
deactivate testStore
controller -> mlr: regression = create(x, Y)
activate mlr
deactivate mlr
else
controller -> testStore: x1 = getXListNumberTestsByWeek(lowerLimit, upperLimit, testsMadeInInterval)
activate testStore
deactivate testStore
controller -> testStore: x2 =getXListAgesByWeek(lowerLimit, upperLimit)
activate testStore
deactivate testStore

controller -> testStore: Y = getYListWeek(lowerLimit, upperLimit)
activate testStore
deactivate testStore
controller -> mlr: regression = create(x,Y)
end
controller -> testStore: tableString = getTableWithHistoricalDataToSednNHS(regression, nhsReportDTO)
activate testStore
deactivate testStore
else
alt getDaysOrWeeks() equals to "days"
alt getIndependentVars()[0] equals to "tests/day"
controller -> testStore: x = getXListNumberTestPerDay(lowerLimit, upperLimit, testsMadeInInterval)
activate testStore
deactivate testStore
else
controller -> testStore: x = getXListAges(lowerLimit, upperLimit)
end
controller -> lr: create(x,Y)
else
controller -> testStore: Y = getYListWeek(lowerLimit, upperLimit)
activate testStore
deactivate testStore
alt getIndependentVars()[0] equals to "tests/day"
controller -> testStore: x = getXListNumberTestsByWeek(lowerLimit, upperLimit, testsMadeInInterval)
else
controller -> testStore: x = getXListAgesByWeek(lowerLimit, upperLimit)
end
controller -> lr: create(x,Y)
end
controller -> testStore: tableString = getTableWithHistoricalDataToSednNHS(regression, nhsReportDTO)
end
@enduml

@startuml

autonumber

participant ":SendReportController" as controller
participant "testsMadeInInterval:List<Test>" as testMadeIntervalList
participant "testStore:TestStore" as testStore
participant ":Company" as company
participant "regression:Regression"
participant "nhsReportValuesDTO:NHSReportValuesDTO" as nhsReportValuesDTO
participant ":MultipleLinearRegression" as mlr
participant ":LinearRegression" as lr
participant "x:List<double[]>" as xList
participant "nhsReportDTO: NHSReportDTO"
activate controller
controller -> controller: lowerLimit= getIntervalOfDaysToFitTheModel()[0]
activate controller
deactivate controller
controller -> controller: upperLimit = getIntervalOfDaysToFitTheModel()[1]
activate controller
deactivate controller
controller -> testStore: testsMadeInInterval = getCovidTestsForRegression(lowerLimit, upperLimit)
activate testStore
deactivate testStore
controller -> testStore: Y = getYList(lowerLimit, upperLimit, testsMadeInInterval)
activate testStore
deactivate testStore

controller -> controller: nhsReportValuesDTO
controller -> controller: tableString
controller -> controller: regression
alt getModelToUse() equals to "multiple"
controller -> xList: create()
activate xList
deactivate xList
alt getDaysOrWeeks equals "days"
controller -> testStore: x1 = getXListNumberTestPerDay(lowerLimit, upperLimit, testsMadeInInterval)
activate testStore
deactivate testStore
controller -> testStore: x2 = getXListAges(lowerLimit, upperLimit)
activate testStore
deactivate testStore
controller -> mlr: regression = create(x, Y)
activate mlr
deactivate mlr
else
controller -> testStore: x1 = getXListNumberTestsByWeek(lowerLimit, upperLimit, testsMadeInInterval)
activate testStore
deactivate testStore
controller -> testStore: x2 =getXListAgesByWeek(lowerLimit, upperLimit)
activate testStore
deactivate testStore

controller -> testStore: Y = getYListWeek(lowerLimit, upperLimit)
activate testStore
deactivate testStore
controller -> mlr: regression = create(x,Y)
end
controller -> testStore: tableString = getTableWithHistoricalDataToSednNHS(regression, nhsReportDTO)
activate testStore
deactivate testStore
else
alt getDaysOrWeeks() equals to "days"
alt getIndependentVars()[0] equals to "tests/day"
controller -> testStore: x = getXListNumberTestPerDay(lowerLimit, upperLimit, testsMadeInInterval)
activate testStore
deactivate testStore
else
controller -> testStore: x = getXListAges(lowerLimit, upperLimit)
end
controller -> lr: create(x,Y)
else
controller -> testStore: Y = getYListWeek(lowerLimit, upperLimit)
activate testStore
deactivate testStore
alt getIndependentVars()[0] equals to "tests/day"
controller -> testStore: x = getXListNumberTestsByWeek(lowerLimit, upperLimit, testsMadeInInterval)
else
controller -> testStore: x = getXListAgesByWeek(lowerLimit, upperLimit)
end
controller -> lr: create(x,Y)
end
controller -> testStore: tableString = getTableWithHistoricalDataToSednNHS(regression, nhsReportDTO)
end
@enduml

PlantUML version 1.2021.4(Sun Apr 04 09:49:39 BST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: Dynamic Code Evolution 64-Bit Server VM
Default Encoding: Cp1252
Language: pt
Country: PT
--></g></svg>